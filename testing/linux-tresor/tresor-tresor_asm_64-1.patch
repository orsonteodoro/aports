--- a/arch/x86/crypto/tresor_asm.S.orig
+++ b/arch/x86/crypto/tresor_asm.S
@@ -42,7 +42,7 @@
 .set	rk9a,	%mm6		/* round key 9a */
 .set	rk9b,	%mm7		/* round key 9b */
 
-/* 32-bit debug registers */
+/* 64-bit debug registers */
 .set	db0,	%db0		/* round key 0a */
 .set	db1,	%db1		/* round key 0b */
 .set	db2,	%db2		/* round key 1a */
@@ -58,7 +58,17 @@
 .set	esp,	%esp
 .set	ebp,	%ebp
 
+/* 64-bit GPR registers */
+.set	rax,	%rax
+.set	rbx,	%rbx
+.set	rcx,	%rcx
+.set	rdx,	%rdx
+.set	rsi,	%rsi
+.set	rdi,	%rdi
+.set	rsp,	%rsp
+.set	rbp,	%rbp
 
+
 /***************************************************************************
  *  				DATA SEGMENT
  ***************************************************************************/
@@ -149,12 +159,18 @@
 /* function prologue */ 
 .macro prolog
 	/* enter */
-	push		ebp
-	movl		esp,ebp
-	pusha
+	pushq		rbp
+	movq		rsp,rbp
+	pushq		rsp
+	pushq		rax
+	pushq		rcx
+	pushq		rdx
+	pushq		rbx
+	pushq		rbp
+	pushq		rsi /* in */
+	pushq		rdi /* out */
 	/* get input */
-	movl		12(ebp),eax
-	movdqu		0(eax),rstate
+	movdqu		0(rsi),rstate
 .endm
 
 /* function epilogue */
@@ -181,8 +197,15 @@
 	pxor		%mm6,%mm6
 	pxor		%mm7,%mm7
 	/* leave */
-	popa
-	pop		ebp
+	popq		rdi
+	popq		rsi
+	popq		rbp
+	popq		rbx
+	popq		rdx
+	popq		rcx
+	popq		rax
+	popq		rsp
+	popq		rbp
 	ret
 .endm
 
@@ -204,17 +227,17 @@
 
 /* copy four 32-bit debug registers into one 128-bit sse register */
 .macro	dbg_to_sse dbg0 dbg1 dbg2 dbg3 sse
-	movl		\dbg0,eax
+	movq		\dbg0,rax
 	movd		eax,\sse
-	movl		\dbg1,eax
+	movq		\dbg1,rax
 	movd		eax,rhelp
 	pslldq		$4,rhelp
 	pxor		rhelp,\sse
-	movl		\dbg2,eax
+	movq		\dbg2,rax
 	movd		eax,rhelp
 	pslldq		$8,rhelp
 	pxor		rhelp,\sse
-	movl		\dbg3,eax
+	movq		\dbg3,rax
 	movd		eax,rhelp
 	pslldq		$12,rhelp
 	pxor		rhelp,\sse
